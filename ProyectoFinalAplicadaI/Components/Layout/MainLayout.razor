@inherits LayoutComponentBase
@implements IDisposable
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigationManager

<link href="css/CobroCreate.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css" rel="stylesheet" />

<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" />

<div class="page-container">
    <!-- Barra superior -->
    <div class="top-bar">
        <AuthorizeView>
            <Authorized>
                <div class="menu-floating custom-align">
                    <a href="/" class="Aplicada1 Leodanny-item">
                        <img src="/favicon.png" alt="Ícono de Menú" class="Leodanny-icon" />
                        <span class="Proyecto-text">ProyectoFinalAplicada1</span>
                    </a>

                    <div class="user-container">
                        <span class="user-name">Usuario: @userName</span>
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="" />
                            <button type="submit" class="btn btn-danger">
                                <i class="fas fa-sign-out-alt"></i> Cerrar Sesión
                            </button>
                        </form>
                    </div>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="menu-floating custom-align">
                    <a href="/" class="ProyectoFinalAplicada1-item">
                        <img src="/favicon.png" alt="Ícono de Menú" class="ProyectoFinalAplicada1" />
                        <span class="ProyectoFinalAplicada1-text">ProyectoFinalAplicada1</span>
                    </a>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </div>

    <!-- Contenido principal con sidebar -->
    <div class="main-content">
        <AuthorizeView>
            <Authorized>
                <!-- Sidebar -->
                <div class="sidebar">
                    <div class="sidebar-menu">
                        <div class="menu-header">
                            <h2><i class="bi bi-list"></i> Menú Principal</h2>
                        </div>

                        <div class="menu-options">
                            <NavLink class="menu-btn" href="/IndexReclamo" activeclass="active">
                                <i class="bi bi-exclamation-circle-fill menu-icon"></i> Reclamos
                            </NavLink>

                            <NavLink class="menu-btn" href="/IndexInsumo" activeclass="active">
                                <i class="bi bi-box-fill menu-icon"></i> Insumos
                            </NavLink>

                            <NavLink class="menu-btn" href="/IndexCompra" activeclass="active">
                                <i class="bi bi-cart-fill menu-icon"></i> Compras
                            </NavLink>

                            <NavLink class="menu-btn" href="/IndexCliente" activeclass="active">
                                <i class="bi bi-person-fill menu-icon"></i> Clientes
                            </NavLink>
                        </div>
                    </div>
                </div>
            </Authorized>
        </AuthorizeView>

        <!-- Área de contenido -->
        <div class="content-area">
            @Body
        </div>
    </div>

    <!-- Footer -->
    <div class="footer">
        <p>ProyectoFinalAplicada1 - Leodanny Maria</p>
    </div>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; } = default!;
    private bool IsAuthenticated { get; set; }
    private string userName = string.Empty;
    private string? currentUrl;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        IsAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;

        if (IsAuthenticated)
        {
            userName = authState.User.Identity?.Name ?? "Usuario no disponible";
        }

        currentUrl = navigationManager.ToBaseRelativePath(navigationManager.Uri);
        navigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = navigationManager.ToBaseRelativePath(e.Location);
        if (currentUrl == "Account/Logout")
        {
            navigationManager.NavigateTo("/login");
        }

        StateHasChanged();
    }

    public void Dispose()
    {
        navigationManager.LocationChanged -= OnLocationChanged;
    }
}

<style>
    /* Paleta de colores principal */
    :root {
        --primary-color: #0288d1;
        --secondary-color: #039be5;
        --light-color: #b3e5fc;
        --lighter-color: #e1f5fe;
        --dark-color: #0277bd;
        --text-color: #333;
        --white: #ffffff;
    }

    /* Estructura principal */
    .page-container {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }

    .top-bar {
        background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
        color: var(--white);
        padding: 0.5rem 1rem;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .main-content {
        display: flex;
        flex: 1;
    }

    /* Sidebar */
    .sidebar {
        width: 250px;
        background: linear-gradient(to bottom, var(--light-color), var(--lighter-color));
        color: var(--text-color);
        transition: all 0.3s;
    }

    .sidebar-menu {
        padding: 1rem;
    }

    .menu-header {
        background-color: var(--primary-color);
        color: var(--white);
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1rem;
        text-align: center;
    }

        .menu-header h2 {
            font-size: 1.25rem;
            margin: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

    .menu-options {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .menu-btn {
        background-color: var(--secondary-color);
        color: var(--white);
        border: none;
        padding: 0.75rem 1rem;
        border-radius: 8px;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s;
    }

        .menu-btn:hover {
            background-color: var(--dark-color);
            transform: translateX(5px);
        }

        .menu-btn.active {
            background-color: var(--dark-color);
            font-weight: bold;
        }

    .menu-icon {
        font-size: 1.2rem;
    }

    /* Área de contenido */
    .content-area {
        flex: 1;
        padding: 1.5rem;
        background-color: var(--white);
    }

    /* Footer */
    .footer {
        background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
        color: var(--white);
        padding: 1rem;
        text-align: center;
    }

    /* Estilos existentes que se mantienen */
    .menu-floating {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
    }

    .user-container {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .user-name {
        margin-right: 1rem;
    }

    .Aplicada1 {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--white);
        text-decoration: none;
    }

    .Leodanny-icon {
        height: 30px;
        width: 30px;
    }

    .Proyecto-text {
        font-weight: bold;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .sidebar {
            width: 60px;
        }

        .menu-header h2 span,
        .menu-btn span {
            display: none;
        }

        .menu-header h2 i,
        .menu-btn i {
            font-size: 1.5rem;
            margin-right: 0;
        }

        .menu-btn {
            justify-content: center;
            padding: 0.75rem;
        }


    }
</style>