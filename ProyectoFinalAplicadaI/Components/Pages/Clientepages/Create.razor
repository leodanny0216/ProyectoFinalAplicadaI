@page "/CreateCliente"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject ClienteService clienteservice

<PageTitle>Registro de Clientes</PageTitle>
<EditForm Model="cliente" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <h3>Registro de Clientes</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col col-6">
                    <label>Nombre:</label>
                    <InputText @bind-Value="cliente.Nombre" class="form-control"></InputText>
                    <ValidationMessage For="@(() => cliente.Nombre)" />
                </div>
                <div class="col col-6">
                    <label>Fecha:</label>
                    <InputDate @bind-Value="cliente.FechaRegistro" class="form-control"></InputDate>
                    <ValidationMessage For="(() => cliente.FechaRegistro)"></ValidationMessage>
                </div>
            </div>
            <div class="row">
                <div class="col col-6">
                    <label>C&eacute;dula:</label>
                    <InputText @bind-Value="cliente.Cedula" class="form-control"></InputText>
                    <ValidationMessage For="(() => cliente.Cedula)"></ValidationMessage>
                </div>
                <div class="col col-6">
                    <label>Tel&eacute;fono:</label>
                    <InputText @bind-Value="cliente.Telefono" class="form-control"></InputText>
                    <ValidationMessage For="(() => cliente.Telefono)"></ValidationMessage>
                </div>
            </div>
            <div>
                <label>Email:</label>
                <InputText @bind-Value="cliente.Email" class="form-control"></InputText>
                <ValidationMessage For="@(() => cliente.Email)" />
            </div>
            <div>
                <label>Direcci&oacuten:</label>
                <InputText @bind-Value="cliente.Direccion" class="form-control"></InputText>
                <ValidationMessage For="@(() => cliente.Direccion)" />
            </div>
        </div>
        <div class="card-footer">
            <div class="input-group">
                <a href="/IndexCliente" class="btn btn-outline-danger bi bi-arrow-return-left"> Volver</a>
                <button type="submit" class="btn btn-outline-success bi bi-floppy-fill"> Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int ClienteId { get; set; }
    public Clientes cliente { get; set; } = new Clientes();

    protected override async Task OnInitializedAsync()
    {
        if (ClienteId > 0)
        {
            this.cliente.ClienteId = ClienteId;
            await this.Buscar();
        }

        cliente.FechaRegistro = DateTime.Now;
    }
    public async Task Buscar()
    {
        var clienteEncontrado = await clienteservice.Buscar(cliente.ClienteId);

        if (clienteEncontrado != null)
        {
            this.cliente = clienteEncontrado;
        }
    }
    public async Task Guardar()
    {
        bool cedulaExiste = await clienteservice.Existe(cliente.ClienteId);
        if (cedulaExiste)
        {
            return;
        }
        else
        {
            var guardo = await clienteservice.Guardar(cliente);
            if (guardo)
            {
                Atras();
            }
        }
    }
    void Atras()
    {
        Navigation.NavigateTo("/IndexCliente");
    }
}