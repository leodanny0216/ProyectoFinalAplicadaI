@page "/EditCliente"
@page "/EditCliente/{ClienteId:int}"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject ClienteService clienteservice

<PageTitle>Edición del Cliente</PageTitle>

<style>
    body {
        background: linear-gradient(to right, #b3e5fc, #81d4fa);
        color: #000;
    }

    .card {
        background: linear-gradient(to right, #e1f5fe, #b3e5fc);
        border-radius: 20px;
        padding: 1rem;
        box-shadow: 0 0 15px rgba(33, 150, 243, 0.5);
        color: #000;
    }

    .card-header {
        background-color: #0288d1;
        color: white;
        border-radius: 20px 20px 0 0;
        padding: 1rem;
        text-align: center;
    }

    .card-header h3 {
        font-size: 24px;
        font-weight: bold;
        margin: 0;
    }

    label {
        color: #01579b;
        font-weight: bold;
    }

    .form-control, .form-select {
        background-color: #ffffff;
        color: #000;
        font-weight: bold;
        border-radius: 10px;
    }

    .btn-outline-primary {
        color: #ffffff;
        background-color: #0288d1;
        border-color: #0288d1;
    }

    .btn-outline-primary:hover {
        background-color: #0277bd;
        border-color: #0277bd;
    }

    .btn-outline-success {
        background-color: #ffffff;
        color: #388e3c;
        border: 2px solid #388e3c;
    }

    .btn-outline-success:hover {
        background-color: #388e3c;
        color: #fff;
    }

    .input-group {
        justify-content: space-between;
    }

    .validation-message {
        color: #d32f2f;
        font-weight: bold;
    }
</style>

<EditForm Model="cliente" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card shadow">
        <div class="card-header">
            <h3>✏️ Editar Cliente</h3>
        </div>

        <div class="card-body">
            <!-- Campos de entrada -->
            <div class="row mb-3">
                <div class="col col-6">
                    <label>ClienteId:</label>
                    <InputNumber @bind-Value="cliente.ClienteId" class="form-control" disabled></InputNumber>
                    <ValidationMessage For="(() => cliente.ClienteId)" class="validation-message"></ValidationMessage>
                </div>
                <div class="col col-6">
                    <label>Nombre:</label>
                    <InputText @bind-Value="cliente.Nombre" class="form-control"></InputText>
                    <ValidationMessage For="@(() => cliente.Nombre)" class="validation-message" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col col-6">
                    <label>Fecha Registro:</label>
                    <InputDate @bind-Value="cliente.FechaRegistro" class="form-control"></InputDate>
                    <ValidationMessage For="(() => cliente.FechaRegistro)" class="validation-message"></ValidationMessage>
                </div>
                <div class="col col-6">
                    <label>Cédula:</label>
                    <InputText @bind-Value="cliente.Cedula" class="form-control"></InputText>
                    <ValidationMessage For="(() => cliente.Cedula)" class="validation-message"></ValidationMessage>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col col-6">
                    <label>Teléfono:</label>
                    <InputText @bind-Value="cliente.Telefono" class="form-control"></InputText>
                    <ValidationMessage For="(() => cliente.Telefono)" class="validation-message"></ValidationMessage>
                </div>
                <div class="col col-6">
                    <label>Email:</label>
                    <InputText @bind-Value="cliente.Email" class="form-control"></InputText>
                    <ValidationMessage For="@(() => cliente.Email)" class="validation-message" />
                </div>
            </div>

            <div class="mb-3">
                <label>Dirección:</label>
                <InputText @bind-Value="cliente.Direccion" class="form-control"></InputText>
                <ValidationMessage For="@(() => cliente.Direccion)" class="validation-message" />
            </div>
        </div>

        <!-- Botones de acción -->
        <div class="card-footer">
            <div class="input-group">
                <a href="/IndexCliente" class="btn btn-outline-primary bi bi-arrow-return-left"> Volver</a>
                <button type="submit" class="btn btn-outline-success bi bi-floppy-fill"> Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int ClienteId { get; set; }
    public Clientes cliente { get; set; } = new Clientes();

    protected override async Task OnInitializedAsync()
    {
        if (ClienteId > 0)
        {
            this.cliente.ClienteId = ClienteId;
            var clienteEncontrado = await clienteservice.Buscar(cliente.ClienteId);

            if (clienteEncontrado != null)
            {
                this.cliente = clienteEncontrado;
            }
        }
    }

    public async Task Guardar()
    {
        var guardo = await clienteservice.Guardar(cliente);
        if (guardo)
            Atras();
    }

    void Atras()
    {
        Navigation.NavigateTo("/IndexCliente");
    }
}